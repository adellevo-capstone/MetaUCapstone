import { MutableRefObject } from "react";
export type WheelSegment = {
    title: string;
    textColor?: string;
    backgroundColor?: string;
};
export type WheelColors = {
    wheelBackground: string;
    text: string;
    border: string;
};
export type WheelDrawState = {
    ctx: CanvasRenderingContext2D | null | undefined;
    segments: WheelSegment[];
    radius: number;
    wheelColors: WheelColors;
    textFont: string;
    /** Full canvas rotation angle [0, Math.PI * 2] */
    rotationAngle: number;
    /** Angle of the one segment */
    segmentAngle: number;
    scale: number;
};
export type SpinningWheelRef = {
    startSpinning: (secondsToSpin: number, speed: number) => void;
    stopSpinning: () => void;
};
type Props = {
    size: number;
    segments: WheelSegment[];
    wheelColors?: WheelColors;
    spinningWheelRef?: MutableRefObject<SpinningWheelRef>;
    timingFunction?: (n: number) => number;
    onSegmentChange?: (index?: number) => void;
    onSpinStart?: () => void;
    onSpinEnd?: (winnerIndex?: number) => void;
};
declare const SpinningWheel: ({ size, segments, wheelColors, spinningWheelRef, timingFunction, onSegmentChange, onSpinStart, onSpinEnd, }: Props) => JSX.Element;
export default SpinningWheel;

//# sourceMappingURL=types.d.ts.map
